#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ–º–ø—Ç–æ–≤ MOVA —á–µ—Ä–µ–∑ API Open WebUI
"""

import requests
import json
import sys
from pathlib import Path

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
OPENWEBUI_URL = "http://localhost:3000"
API_BASE = f"{OPENWEBUI_URL}/api/v1"

def load_json_file(file_path):
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç JSON —Ñ–∞–π–ª"""
    try:
        with open(file_path, 'r', encoding='utf-8') as f:
            return json.load(f)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ {file_path}: {e}")
        return None

def upload_prompts_via_api(prompts_data, category="MOVA"):
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –ø—Ä–æ–º–ø—Ç—ã —á–µ—Ä–µ–∑ API"""
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø—Ä–æ–º–ø—Ç–æ–≤
    try:
        response = requests.get(f"{API_BASE}/prompts/")
        if response.status_code == 200:
            existing_prompts = response.json()
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(existing_prompts)} —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø—Ä–æ–º–ø—Ç–æ–≤")
        else:
            print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–º–ø—Ç–æ–≤: {response.status_code}")
            existing_prompts = []
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ø—Ä–æ–º–ø—Ç–æ–≤: {e}")
        existing_prompts = []

    # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–∞–∂–¥—ã–π –ø—Ä–æ–º–ø—Ç
    success_count = 0
    for prompt in prompts_data:
        prompt_id = prompt.get('id')
        label = prompt.get('label', prompt_id)
        value = prompt.get('value', '')
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Ç–∞–∫–æ–π –ø—Ä–æ–º–ø—Ç
        if any(p.get('id') == prompt_id for p in existing_prompts):
            print(f"‚ö†Ô∏è –ü—Ä–æ–º–ø—Ç '{label}' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º")
            continue
        
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–º–ø—Ç —á–µ—Ä–µ–∑ API
        prompt_data = {
            "id": prompt_id,
            "name": label,
            "content": value,
            "category": category,
            "tags": ["MOVA", "synthetic"]
        }
        
        try:
            response = requests.post(f"{API_BASE}/prompts/", json=prompt_data)
            if response.status_code == 200:
                print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω –ø—Ä–æ–º–ø—Ç: {label}")
                success_count += 1
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ–º–ø—Ç–∞ '{label}': {response.status_code}")
                print(f"   –û—Ç–≤–µ—Ç: {response.text}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ–º–ø—Ç–∞ '{label}': {e}")
    
    return success_count

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ–º–ø—Ç–æ–≤ MOVA —á–µ—Ä–µ–∑ API Open WebUI")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å Open WebUI
    try:
        response = requests.get(f"{OPENWEBUI_URL}/api/config")
        if response.status_code != 200:
            print(f"‚ùå Open WebUI –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {response.status_code}")
            return
        print("‚úÖ Open WebUI –¥–æ—Å—Ç—É–ø–µ–Ω")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Open WebUI: {e}")
        return
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —É–ø—Ä–æ—â–µ–Ω–Ω—ã–µ –ø—Ä–æ–º–ø—Ç—ã
    prompts_file = Path("openwebui_prompts/synthetic_mova_simple.json")
    if not prompts_file.exists():
        print(f"‚ùå –§–∞–π–ª {prompts_file} –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    prompts_data = load_json_file(prompts_file)
    if not prompts_data:
        return
    
    print(f"üìÅ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(prompts_data)} –ø—Ä–æ–º–ø—Ç–æ–≤ –∏–∑ —Ñ–∞–π–ª–∞")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —á–µ—Ä–µ–∑ API
    success_count = upload_prompts_via_api(prompts_data, "Synthetic MOVA")
    
    print("=" * 50)
    print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ: {success_count}/{len(prompts_data)} –ø—Ä–æ–º–ø—Ç–æ–≤")
    
    if success_count > 0:
        print(f"\nüåê –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ Open WebUI: {OPENWEBUI_URL}/workspace/prompts")

if __name__ == "__main__":
    main() 