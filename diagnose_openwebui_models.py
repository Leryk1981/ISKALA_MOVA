#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å –º–æ–¥–µ–ª—è–º–∏ –≤ Open WebUI
"""

import requests
import json
import time

def check_openwebui_status():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ Open WebUI"""
    try:
        response = requests.get("http://localhost:3000", timeout=5)
        if response.status_code == 200:
            print("‚úÖ Open WebUI –¥–æ—Å—Ç—É–ø–µ–Ω")
            return True
        else:
            print(f"‚ùå Open WebUI –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Open WebUI: {e}")
        return False

def check_iskala_models():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥–µ–ª–µ–π ISKALA"""
    try:
        response = requests.get("http://localhost:8001/api/openwebui/models", timeout=5)
        if response.status_code == 200:
            models = response.json()
            print("‚úÖ –ú–æ–¥–µ–ª–∏ ISKALA –¥–æ—Å—Ç—É–ø–Ω—ã:")
            for model in models.get("models", []):
                print(f"   - {model['name']} ({model['id']})")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –º–æ–¥–µ–ª–µ–π ISKALA: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ ISKALA: {e}")
        return False

def check_openwebui_models_public():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—É–±–ª–∏—á–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π Open WebUI"""
    try:
        # –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã
        endpoints = [
            "http://localhost:3000/api/models",
            "http://localhost:3000/api/v1/models/",
            "http://localhost:3000/api/v1/models"
        ]
        
        for endpoint in endpoints:
            try:
                response = requests.get(endpoint, timeout=5)
                print(f"üì° {endpoint}: {response.status_code}")
                if response.status_code == 200:
                    print("‚úÖ –ú–æ–¥–µ–ª–∏ –¥–æ—Å—Ç—É–ø–Ω—ã!")
                    return True
                elif response.status_code == 401:
                    print("üîê –¢—Ä–µ–±—É–µ—Ç—Å—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è")
                else:
                    print(f"‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç: {response.status_code}")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ {endpoint}: {e}")
        
        return False
    except Exception as e:
        print(f"‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False

def check_ollama_connection():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Ollama"""
    try:
        response = requests.get("http://localhost:11434/api/tags", timeout=5)
        if response.status_code == 200:
            print("‚úÖ Ollama –¥–æ—Å—Ç—É–ø–µ–Ω")
            return True
        else:
            print(f"‚ùå Ollama –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {response.status_code}")
            return False
    except Exception as e:
        print("‚ùå Ollama –Ω–µ –∑–∞–ø—É—â–µ–Ω (—ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ, –µ—Å–ª–∏ –≤—ã –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ Ollama)")
        return False

def show_solutions():
    """–ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã"""
    print("\nüîß –†–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã '–ù–µ—Ç –º–æ–¥–µ–ª–µ–π –¥–ª—è –≤—ã–±–æ—Ä–∞':")
    print("=" * 50)
    
    solutions = [
        {
            "step": 1,
            "title": "–í–æ–π–¥–∏—Ç–µ –≤ Open WebUI",
            "description": "–û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:3000 –∏ –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É"
        },
        {
            "step": 2,
            "title": "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–∑–¥–µ–ª Models",
            "description": "Settings ‚Üí Models - –∑–¥–µ—Å—å –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏"
        },
        {
            "step": 3,
            "title": "–î–æ–±–∞–≤—å—Ç–µ –º–æ–¥–µ–ª—å –≤—Ä—É—á–Ω—É—é",
            "description": "–ù–∞–∂–º–∏—Ç–µ 'Add Model' –∏ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ OpenRouter"
        },
        {
            "step": 4,
            "title": "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞",
            "description": "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"
        },
        {
            "step": 5,
            "title": "–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ Open WebUI",
            "description": "docker restart open-webui"
        }
    ]
    
    for solution in solutions:
        print(f"\n{solution['step']}. {solution['title']}")
        print(f"   {solution['description']}")

def show_manual_setup():
    """–ü–æ–∫–∞–∑–∞—Ç—å —Ä—É—á–Ω—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É"""
    print("\nüìã –†—É—á–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –º–æ–¥–µ–ª–∏ OpenRouter:")
    print("=" * 50)
    
    print("1. –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:3000")
    print("2. –í–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É")
    print("3. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ Settings ‚Üí Models")
    print("4. –ù–∞–∂–º–∏—Ç–µ 'Add Model'")
    print("5. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É:")
    print("   Provider: OpenRouter")
    print("   Base URL: https://openrouter.ai/api/v1")
    print("   Model Name: moonshotai/kimi-k2")
    print("   API Key: –≤–∞—à_–∫–ª—é—á_openrouter")
    print("   Context Length: 8192")
    print("6. –ù–∞–∂–º–∏—Ç–µ 'Save'")

def check_docker_logs():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ Docker"""
    print("\nüìã –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ Open WebUI:")
    print("docker logs open-webui --tail 20")
    print("\nüìã –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ ISKALA:")
    print("docker logs iskala-core --tail 20")

def main():
    print("üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º—ã —Å –º–æ–¥–µ–ª—è–º–∏ Open WebUI")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∏
    check_openwebui_status()
    check_iskala_models()
    check_openwebui_models_public()
    check_ollama_connection()
    
    # –†–µ—à–µ–Ω–∏—è
    show_solutions()
    show_manual_setup()
    check_docker_logs()
    
    print("\n" + "=" * 50)
    print("üí° –û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –º–æ–¥–µ–ª–µ–π:")
    print("1. –ù–µ –≤–æ—à–ª–∏ –≤ —Å–∏—Å—Ç–µ–º—É Open WebUI")
    print("2. –ù–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π")
    print("3. –ü—Ä–æ–±–ª–µ–º—ã —Å –ø—Ä–∞–≤–∞–º–∏ –¥–æ—Å—Ç—É–ø–∞")
    print("4. Open WebUI –Ω–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≥—Ä—É–∑–∏–ª—Å—è")
    
    print("\nüöÄ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print("1. –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:3000")
    print("2. –í–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É")
    print("3. –î–æ–±–∞–≤—å—Ç–µ –º–æ–¥–µ–ª—å OpenRouter –≤—Ä—É—á–Ω—É—é")
    print("4. –ï—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è - –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ Open WebUI")

if __name__ == "__main__":
    main() 