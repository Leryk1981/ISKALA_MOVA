#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import sys
import os
from pathlib import Path

# –î–æ–¥–∞—î–º–æ —à–ª—è—Ö –¥–æ –º–æ–¥—É–ª—ñ–≤
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from main import rag_system

def test_rag_system():
    """–¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è RAG —Å–∏—Å—Ç–µ–º–∏"""
    print("=== –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è RAG —Å–∏—Å—Ç–µ–º–∏ ISKALA ===\n")
    
    # –¢–µ—Å—Ç–æ–≤–∏–π —Ñ–∞–π–ª
    test_file = "test_chat.txt"
    
    if not os.path.exists(test_file):
        print(f"‚ùå –¢–µ—Å—Ç–æ–≤–∏–π —Ñ–∞–π–ª {test_file} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
        return False
    
    print(f"üìÅ –û–±—Ä–æ–±–∫–∞ —Ñ–∞–π–ª—É: {test_file}")
    
    try:
        # –û–±—Ä–æ–±–∫–∞ —á–∞—Ç —Ñ–∞–π–ª—É
        result = rag_system.process_chat_file(test_file, theme="RAG —Å–∏—Å—Ç–µ–º–∞")
        
        if "error" in result:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –æ–±—Ä–æ–±–∫–∏: {result['error']}")
            return False
        
        print(f"‚úÖ –§–∞–π–ª —É—Å–ø—ñ—à–Ω–æ –æ–±—Ä–æ–±–ª–µ–Ω–æ")
        print(f"   - ID –∫–∞–ø—Å—É–ª–∏: {result['capsule_id']}")
        print(f"   - –ö—ñ–ª—å–∫—ñ—Å—Ç—å Q&A –ø–∞—Ä: {result['qa_count']}")
        print(f"   - –§–∞–π–ª –∫–∞–ø—Å—É–ª–∏: {result['capsule_file']}")
        
        # –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –ø–æ—à—É–∫—É
        print("\nüîç –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –ø–æ—à—É–∫—É...")
        
        search_queries = [
            "—è–∫ –ø—Ä–∞—Ü—é—î —ñ–Ω–¥–µ–∫—Å–∞—Ü—ñ—è",
            "—Å–µ–º–∞–Ω—Ç–∏—á–Ω–∏–π –ø–æ—à—É–∫",
            "–ø–æ–∫—Ä–∞—â–µ–Ω–Ω—è —è–∫–æ—Å—Ç—ñ",
            "meaning capsule"
        ]
        
        for query in search_queries:
            print(f"\n   –ü–æ—à—É–∫: '{query}'")
            search_results = rag_system.search_knowledge(query, search_type="both", n_results=3)
            
            if search_results["qa_results"]:
                print(f"   Q&A —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏:")
                for i, qa in enumerate(search_results["qa_results"][:2]):
                    print(f"     {i+1}. {qa['question'][:50]}...")
                    print(f"        –í—ñ–¥–ø–æ–≤—ñ–¥—å: {qa['answer'][:50]}...")
                    print(f"        –°—Ö–æ–∂—ñ—Å—Ç—å: {1 - qa['similarity']:.3f}")
            
            if search_results["capsule_results"]:
                print(f"   –ö–∞–ø—Å—É–ª–∏:")
                for i, capsule in enumerate(search_results["capsule_results"][:2]):
                    print(f"     {i+1}. –¢–µ–º–∞: {capsule['theme']}")
                    print(f"        –¢–µ–≥–∏: {', '.join(capsule['tags'][:3])}")
                    print(f"        Q&A –∫—ñ–ª—å–∫—ñ—Å—Ç—å: {capsule['qa_count']}")
        
        # –°–ø–∏—Å–æ–∫ –∫–∞–ø—Å—É–ª
        print("\nüìã –°–ø–∏—Å–æ–∫ —Å—Ç–≤–æ—Ä–µ–Ω–∏—Ö –∫–∞–ø—Å—É–ª:")
        capsules = rag_system.list_capsules()
        for capsule in capsules:
            print(f"   - {capsule['capsule_id']}: {capsule['theme']} ({capsule['qa_count']} Q&A)")
        
        print("\n‚úÖ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!")
        return True
        
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è: {str(e)}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    test_rag_system() 