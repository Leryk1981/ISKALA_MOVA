#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫—É —Ç–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ ISKALA OpenAPI Tool Server
"""

import subprocess
import time
import requests
import json
import sys
import os

def check_port_available(port):
    """–ü–µ—Ä–µ–≤—ñ—Ä—è—î —á–∏ –ø–æ—Ä—Ç –¥–æ—Å—Ç—É–ø–Ω–∏–π"""
    try:
        import socket
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        result = sock.connect_ex(('localhost', port))
        sock.close()
        return result != 0
    except:
        return False

def check_iskala_modules():
    """–ü–µ—Ä–µ–≤—ñ—Ä—è—î —Å—Ç–∞—Ç—É—Å –º–æ–¥—É–ª—ñ–≤ ISKALA"""
    print("üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å—É –º–æ–¥—É–ª—ñ–≤ ISKALA...")
    
    modules = {
        "ISKALA Core": "http://localhost:8001/health",
        "Vault": "http://localhost:8081/health", 
        "Translation": "http://localhost:8082/health",
        "RAG": "http://localhost:8002/health"
    }
    
    status = {}
    for name, url in modules.items():
        try:
            response = requests.get(url, timeout=5)
            if response.status_code == 200:
                print(f"‚úÖ {name}: –ø—Ä–∞—Ü—é—î")
                status[name] = "healthy"
            else:
                print(f"‚ö†Ô∏è {name}: –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∑ –∫–æ–¥–æ–º {response.status_code}")
                status[name] = "unhealthy"
        except Exception as e:
            print(f"‚ùå {name}: –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π ({str(e)})")
            status[name] = "error"
    
    return status

def start_openapi_server():
    """–ó–∞–ø—É—Å–∫–∞—î OpenAPI Tool Server"""
    print("üöÄ –ó–∞–ø—É—Å–∫ ISKALA OpenAPI Tool Server...")
    
    if not check_port_available(8003):
        print("‚ùå –ü–æ—Ä—Ç 8003 –≤–∂–µ –∑–∞–π–Ω—è—Ç–∏–π")
        return False
    
    try:
        # –ó–∞–ø—É—Å–∫–∞—î–º–æ —Å–µ—Ä–≤–µ—Ä –≤ —Ñ–æ–Ω–æ–≤–æ–º—É —Ä–µ–∂–∏–º—ñ
        process = subprocess.Popen([
            sys.executable, "iskala_openapi_server.py"
        ], stdout=subprocess.PIPE, stderr=subprocess.PIPE)
        
        # –ß–µ–∫–∞—î–º–æ –ø–æ–∫–∏ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è
        time.sleep(3)
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —Å–µ—Ä–≤–µ—Ä –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î
        try:
            response = requests.get("http://localhost:8003/", timeout=5)
            if response.status_code == 200:
                print("‚úÖ OpenAPI Tool Server –∑–∞–ø—É—â–µ–Ω–∏–π —É—Å–ø—ñ—à–Ω–æ")
                return True
            else:
                print(f"‚ùå –°–µ—Ä–≤–µ—Ä –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∑ –∫–æ–¥–æ–º {response.status_code}")
                return False
        except Exception as e:
            print(f"‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –ø—ñ–¥–∫–ª—é—á–∏—Ç–∏—Å—è –¥–æ —Å–µ—Ä–≤–µ—Ä–∞: {str(e)}")
            return False
            
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø—É—Å–∫—É —Å–µ—Ä–≤–µ—Ä–∞: {str(e)}")
        return False

def test_openapi_endpoints():
    """–¢–µ—Å—Ç—É—î OpenAPI –µ–Ω–¥–ø–æ—ñ–Ω—Ç–∏"""
    print("\nüß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è OpenAPI –µ–Ω–¥–ø–æ—ñ–Ω—Ç—ñ–≤...")
    
    base_url = "http://localhost:8003"
    
    # –¢–µ—Å—Ç 1: OpenAPI —Å—Ö–µ–º–∞
    try:
        response = requests.get(f"{base_url}/openapi.json")
        if response.status_code == 200:
            print("‚úÖ OpenAPI —Å—Ö–µ–º–∞ –¥–æ—Å—Ç—É–ø–Ω–∞")
        else:
            print(f"‚ùå OpenAPI —Å—Ö–µ–º–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è OpenAPI —Å—Ö–µ–º–∏: {str(e)}")
    
    # –¢–µ—Å—Ç 2: –°—Ç–∞—Ç—É—Å –º–æ–¥—É–ª—ñ–≤
    try:
        response = requests.get(f"{base_url}/iskala/status")
        if response.status_code == 200:
            status = response.json()
            print("‚úÖ –°—Ç–∞—Ç—É—Å –º–æ–¥—É–ª—ñ–≤ –æ—Ç—Ä–∏–º–∞–Ω–æ:")
            for module, info in status.items():
                print(f"   - {module}: {info.get('status', 'unknown')}")
        else:
            print(f"‚ùå –°—Ç–∞—Ç—É—Å –º–æ–¥—É–ª—ñ–≤ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É: {str(e)}")

def show_integration_instructions():
    """–ü–æ–∫–∞–∑—É—î —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó –ø–æ —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—ó"""
    print("\nüîß –Ü–ù–°–¢–†–£–ö–¶–Ü–á –ü–û –Ü–ù–¢–ï–ì–†–ê–¶–Ü–á –í OPEN WEBUI:")
    print("=" * 50)
    print("1. –í—ñ–¥–∫—Ä–∏–π—Ç–µ Open WebUI: http://localhost:3000")
    print("2. –ü–µ—Ä–µ–π–¥—ñ—Ç—å –≤ Settings ‚Üí Tools")
    print("3. –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å 'Add Tool'")
    print("4. –í–∏–±–µ—Ä—ñ—Ç—å 'OpenAPI Tool Server'")
    print("5. –ó–∞–ø–æ–≤–Ω—ñ—Ç—å –ø–æ–ª—è:")
    print("   - Name: ISKALA Modules")
    print("   - URL: http://localhost:8003/openapi.json")
    print("   - Description: –ú–æ–¥—É–ª—ñ ISKALA –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –ø–∞–º'—è—Ç—Ç—é, –ø–µ—Ä–µ–∫–ª–∞–¥–æ–º —Ç–∞ RAG")
    print("6. –ó–±–µ—Ä–µ–∂—ñ—Ç—å –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è")
    print("\nüìã –î–æ—Å—Ç—É–ø–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó:")
    print("- search_iskala_memory - –ø–æ—à—É–∫ –≤ –ø–∞–º'—è—Ç—ñ")
    print("- call_iskala_tool - –≤–∏–∫–ª–∏–∫ —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ñ–≤")
    print("- translate_text - –ø–µ—Ä–µ–∫–ª–∞–¥ —Ç–µ–∫—Å—Ç—É")
    print("- rag_search - RAG –ø–æ—à—É–∫")
    print("- get_iskala_status - —Å—Ç–∞—Ç—É—Å –º–æ–¥—É–ª—ñ–≤")

def main():
    """–ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è"""
    print("üå∫ ISKALA OpenAPI Tool Server - –ó–∞–ø—É—Å–∫ —Ç–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞")
    print("=" * 60)
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –º–æ–¥—É–ª—ñ ISKALA
    module_status = check_iskala_modules()
    
    # –ó–∞–ø—É—Å–∫–∞—î–º–æ OpenAPI —Å–µ—Ä–≤–µ—Ä
    if start_openapi_server():
        # –¢–µ—Å—Ç—É—î–º–æ –µ–Ω–¥–ø–æ—ñ–Ω—Ç–∏
        test_openapi_endpoints()
        
        # –ü–æ–∫–∞–∑—É—î–º–æ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó
        show_integration_instructions()
        
        print("\n" + "=" * 60)
        print("‚úÖ ISKALA OpenAPI Tool Server –≥–æ—Ç–æ–≤–∏–π –¥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è!")
        print("üåê URL: http://localhost:8003/openapi.json")
        print("üìñ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—è: ISKALA_API_INTEGRATION_GUIDE.md")
        
    else:
        print("\n‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–ø—É—Å—Ç–∏—Ç–∏ OpenAPI Tool Server")
        print("üîß –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ:")
        print("   - –ß–∏ –∑–∞–ø—É—â–µ–Ω—ñ –º–æ–¥—É–ª—ñ ISKALA")
        print("   - –ß–∏ –Ω–µ –∑–∞–π–Ω—è—Ç–∏–π –ø–æ—Ä—Ç 8003")
        print("   - –ß–∏ —î —Ñ–∞–π–ª iskala_openapi_server.py")

if __name__ == "__main__":
    main() 